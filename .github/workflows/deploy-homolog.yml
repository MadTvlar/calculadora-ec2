name: Deploy Homolog

on:
  push:
    branches: [ homolog ]

concurrency:
  group: deploy-hml
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      HOST: ${{ secrets.EC2_HOST }}
      PORT: ${{ secrets.SSH_PORT || '22' }}
    steps:
      - name: Checkout (logs)
        uses: actions/checkout@v4

      - name: Add EC2 to known_hosts (robusto)
        run: |
          set -euo pipefail
          : "${HOST:?EC2_HOST secret not set}"      # falha legível se vazio
          mkdir -p ~/.ssh
          # tenta coletar a chave do host com timeout
          ssh-keyscan -T 10 -p "$PORT" -H "$HOST" >> ~/.ssh/known_hosts 2>/dev/null || {
            echo "⚠️ ssh-keyscan falhou, seguiremos com StrictHostKeyChecking=no no SSH."
          }
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/known_hosts || true

      - name: Write SSH key (normaliza quebras de linha)
        run: |
          set -euo pipefail
          : "${{ secrets.EC2_SSH_KEY }}?Need EC2_SSH_KEY"
          echo "${{ secrets.EC2_SSH_KEY }}" | tr -d '\r' > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

      - name: Run deploy.sh on EC2 (homolog)
        run: |
          set -euo pipefail
          ssh -p "$PORT" -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ubuntu@"$HOST" \
            "/home/ubuntu/calculadora-ec2-hml/deploy.sh"

      - name: Post-deploy healthcheck (8081)
        run: |
          set -euo pipefail
          ssh -p "$PORT" -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ubuntu@"$HOST" '
            for i in {1..12}; do
              if curl -fsS http://localhost:8081/health >/dev/null; then
                echo "✅ Health OK"
                exit 0
              fi
              echo "… aguardando ($i/12)"
              sleep 5
            done
            echo "❌ Healthcheck failed" >&2
            cd ~/calculadora-ec2-hml && docker-compose ps || true
            cname=$(cd ~/calculadora-ec2-hml && docker-compose ps -q | head -n1)
            [ -n "$cname" ] && docker logs --tail=200 "$cname" || true
            exit 1
          '
