<!DOCTYPE html>
<html lang="pt-br">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="/css/resumomotos.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
  <script src="https://cdn.jsdelivr.net/npm/echarts@5.4.3/dist/echarts.min.js"></script>

  <title>MOTORS SIMULATOR</title>
</head>

<body>
  <div class="top-container">
    <div class="logo-container">
      <a href="/segmentos">
        <img src="/images/tropa_azul.png" alt="TVLAR MOTOS" class="logo">
      </a>
    </div>

    <div class="filial-container">
      <div class="user-menu">
        <button id="user-button">
          <%= usuario %>
        </button>
        <div id="user-dropdown" class="dropdown-content">
          <a href="/motos">Voltar</a>
          <a href="/logout">Logout</a>
        </div>
      </div>
    </div>
  </div>

  <div class="dashboard">
    <div class="carta" id="grafico-carta">
      <div class="carta-header">
        Resumo do Mês - <%= usuario %>
      </div>
      <div class="chart">
        <div id="graficoComMeta" style="height: 100%; width: 250%;"></div>
      </div>
    </div>
  </div>

  <div class="card-container">
    <div class="card card-1">
      <h2>RANKING VOLUME</h2>
      <ul class="rank-list">
        <% rankingVolume.forEach((v, i)=> { %>
          <li class="rank-item">
            <span class="pos">
              <% if (i===0) { %>
                <i class="fas fa-medal gold"></i>
                <% } else if (i===1) { %>
                  <i class="fas fa-medal silver"></i>
                  <% } else if (i===2) { %>
                    <i class="fas fa-medal bronze"></i>
                    <% } else { %>
                      <%= i + 1 %>º
                        <% } %>
            </span>
            <span class="name">
              <%= v.vendedor %>
            </span>
            <span class="sales">
              <%= v.total_vendas %> V.
            </span>
          </li>
          <% }) %>
      </ul>
    </div>

    <div class="card card-2">
      <h2>RANKING LLO</h2>
      <ul class="rank-list">
        <% rankingLLO.forEach((v, i)=> { %>
          <li class="rank-item">
            <span class="pos">
              <% if (i===0) { %>
                <i class="fas fa-medal gold"></i>
                <% } else if (i===1) { %>
                  <i class="fas fa-medal silver"></i>
                  <% } else if (i===2) { %>
                    <i class="fas fa-medal bronze"></i>
                    <% } else { %>
                      <%= i + 1 %>º
                        <% } %>
            </span>
            <span class="name">
              <%= v.vendedor %>
            </span>
            <span class="sales">
              <%= v.percentual_lucro !=null ? v.percentual_lucro.toString().replace('.', ',' ) + '%' : '-' %>
            </span>
          </li>
          <% }) %>
      </ul>
    </div>

    <div class="card card-3">
      <h2>RANKING CAPTAÇÃO</h2>
      <ul class="rank-list">
        <% rankingCaptacao.forEach((v, i)=> { %>
          <li class="rank-item">
            <span class="pos">
              <% if (i===0) { %>
                <i class="fas fa-medal gold"></i>
                <% } else if (i===1) { %>
                  <i class="fas fa-medal silver"></i>
                  <% } else if (i===2) { %>
                    <i class="fas fa-medal bronze"></i>
                    <% } else { %>
                      <%= i + 1 %>º
                        <% } %>
            </span>
            <span class="name">
              <%= v.vendedor %>
            </span>
            <span class="sales">
              <%= v.totalCaptado %> Motos
            </span>
          </li>
          <% }) %>
      </ul>
    </div>
  </div>

  <div class="card-container">
    <div class="card card-4">
      <h2>RANKING CONTRATOS</h2>
      <ul class="rank-list">
        <% rankingContratos.forEach((v, i)=> { %>
          <li class="rank-item">
            <span class="pos">
              <% if (i===0) { %>
                <i class="fas fa-medal gold"></i>
                <% } else if (i===1) { %>
                  <i class="fas fa-medal silver"></i>
                  <% } else if (i===2) { %>
                    <i class="fas fa-medal bronze"></i>
                    <% } else { %>
                      <%= i + 1 %>º
                        <% } %>
            </span>
            <span class="name">
              <%= v.vendedor %>
            </span>
            <span class="sales">
              <%= v.totalContratos %> Ctts.
            </span>
          </li>
          <% }) %>
      </ul>
    </div>

    <div class="card card-5">
      <h2>NPS</h2>
      <ul class="rank-list">
        <% rankingNPS.forEach(v=> { %>
          <li class="rank-item">
            <span class="name">
              <%= v.vendedor %>
            </span>
            <span class="sales">
              <%= Math.round(v.nota_oficial) %> Pts.
            </span>
          </li>
          <% }) %>
      </ul>
    </div>


    <div class="card card-6">
      <h2>RANKING RETORNO</h2>
      <ul class="rank-list">
        <% rankingRetornos.forEach((v, i)=> { %>
          <li class="rank-item">
            <span class="pos">
              <% if (i===0) { %>
                <i class="fas fa-medal gold"></i>
                <% } else if (i===1) { %>
                  <i class="fas fa-medal silver"></i>
                  <% } else if (i===2) { %>
                    <i class="fas fa-medal bronze"></i>
                    <% } else { %>
                      <%= i + 1 %>º
                        <% } %>
            </span>
            <span class="name">
              <%= v.vendedor %>
            </span>
            <span class="sales">
              <%= v.quantidadeRetorno %> Ret.
            </span>
          </li>
          <% }) %>
      </ul>
    </div>
  </div>


  <footer class="footer">
    <div class="footer-text">
      <p>Copyright &copy; 2025 by Departamento de T.I | All Rights Reserved.</p>
      <span class="animate scroll" style="--i:1;"></span>
    </div>
    <div class="footer-iconTop">
      <a href="#"><i class='bx bx-up-arrow-alt'></i></a>
      <span class="animate scroll" style="--i:3;"></span>
    </div>
  </footer>

  <script>
    document.getElementById("user-button").addEventListener("click", function () {
      document.getElementById("user-dropdown").classList.toggle("show");
    });

    window.onclick = function (event) {
      if (!event.target.matches('#user-button')) {
        var dropdowns = document.getElementsByClassName("dropdown-content");
        for (var i = 0; i < dropdowns.length; i++) {
          if (dropdowns[i].classList.contains('show')) {
            dropdowns[i].classList.remove('show');
          }
        }
      }
    };


    // Função do gráfico exatamente igual ao que você enviou
    const dadosGrafico = JSON.parse('<%- JSON.stringify(dadosGrafico) %>');
    const dadoscaptacao = JSON.parse('<%- JSON.stringify(totalCaptado) %>');
    const dadosContrato = JSON.parse('<%- JSON.stringify(totalContratos) %>');

    function carregarGraficoComMeta(animar = false) {
      const filiais = ['Volume', 'LLO', 'Captação', 'Contratos', 'Retorno'];

      // Se animar for falso, mostra barras zeradas. Se true, mostra os valores reais.
      const vendas = animar
        ? [
          dadosGrafico.volume || 0,
          (dadosGrafico.totalOpe / dadosGrafico.totalVendaReal * 100 || 0).toFixed(2),
          dadoscaptacao || 0,
          dadosContrato || 0,
          dadosGrafico.quantidadeRetorno || 0
        ]
        : [0, 0, 0, 0, 0];

      const metas = {
        'Volume': 25,
        'LLO': 13,
        'Captação': 12,
        'Contratos': 12,
        'Retorno': 12,
      };

      const metasMinimas = {
        'Volume': 7,
        'LLO': 10,
        'Captação': 3,
        'Contratos': 3,
        'Retorno': 3
      };

      const metasArray = filiais.map(nome => metas[nome]);
      const metasMinimasArray = filiais.map(nome => metasMinimas[nome]);

      const chart = echarts.init(document.getElementById('graficoComMeta'));

      const option = {
        backgroundColor: 'transparent',
        tooltip: {
          trigger: 'axis',
          axisPointer: {
            type: 'shadow',
            shadowStyle: {
              color: 'rgba(52, 152, 219, 0.15)',
            }
          },
          backgroundColor: 'rgba(50, 50, 50, 0.8)',
          borderRadius: 8,
          padding: 12,
          textStyle: {
            color: '#fff',
            fontSize: 14
          },
          formatter: function (params) {
            const venda = params.find(p => p.seriesName === 'Vendas');
            const nome = venda.name;
            const metaMax = metas[nome];
            const metaMin = metasMinimas[nome];
            return `
    <strong>${nome}</strong><br/>
    Realizado: <b>${nome === 'LLO' ? venda.value + '%' : venda.value}</b><br/>
    Meta Máxima: <b>${metaMax}${nome === 'LLO' ? '%' : ''}</b><br/>
    Meta Mínima: <b>${metaMin}${nome === 'LLO' ? '%' : ''}</b>
  `;
          }

        },
        grid: {
          left: '6%',
          right: '6%',
          bottom: '14%',
          top: '16%',
          containLabel: true
        },
        xAxis: {
          type: 'category',
          data: filiais,
          axisLine: {
            lineStyle: {
              color: '#bdc3c7',
              width: 1.5
            }
          },
          axisTick: {
            alignWithLabel: true
          },
          axisLabel: {
            color: 'var(--text-primary)',
            fontWeight: '600',
            fontSize: 14,
            interval: 0,
            rotate: 0
          }
        },
        yAxis: {
          type: 'value',
          axisLine: {
            lineStyle: {
              color: '#bdc3c7',
              width: 1
            }
          },
          splitLine: {
            lineStyle: {
              color: '#ecf0f1',
              type: 'dashed'
            }
          },
          axisLabel: {
            color: 'var(--text-primary)',
            fontWeight: '500',
            fontSize: 13
          },
          min: 0,
          max: function () {
            return Math.max(Math.max(...vendas), Math.max(...metasArray)) + 5;
          }
        },
        series: [
          {
            name: 'Vendas',
            type: 'bar',
            data: vendas.map((valor, i) => ({
              value: valor,
              name: filiais[i]
            })),
            itemStyle: {
              color: '#0002c6',
              borderRadius: [6, 6, 0, 0]
            },
            barWidth: '36%',
            emphasis: {
              itemStyle: {
                color: '#38bdf8',
                shadowBlur: 8,
                shadowColor: 'rgba(39, 174, 96, 0.6)'
              }
            },
            label: {
              show: true,
              position: 'top',
              color: '#808080',
              fontWeight: '700',
              fontSize: 14,
              formatter: function (params) {
                return params.name === 'LLO' ? `${params.value}%` : params.value;
              }
            },
            animationDuration: 1500,    // mais lento
            animationDelay: 500,       // espera 1s antes de começar
            animationDurationUpdate: 3000,
            animationDelayUpdate: 1000,
            animationEasing: 'easeOutQuart'
          },
          {
            name: 'Meta Máxima',
            type: 'none',
            data: metasArray,
            symbol: 'circle',
            symbolSize: 10,
            smooth: true,
            lineStyle: {
              type: 'dashed',
              color: 'var(--meta-line)',
              width: 3
            },
            itemStyle: {
              color: 'var(--meta-line)',
              borderColor: 'black',
              borderWidth: 2,
              shadowColor: 'rgba(46, 204, 113, 0.7)',
              shadowBlur: 8
            },
            emphasis: {
              scale: true,
              scaleSize: 1.1
            },
            label: {
              show: false
            }
          },
          {
            name: 'Meta Mínima',
            type: 'none',
            data: metasMinimasArray,
            symbol: 'circle',
            symbolSize: 8,
            smooth: true,
            lineStyle: {
              type: 'dotted',
              color: 'var(--meta-min-line)',
              width: 0
            },
            itemStyle: {
              color: 'var(--meta-min-line)',
              borderColor: 'black',
              borderWidth: 1.5,
              shadowColor: 'rgba(241, 196, 15, 0.6)',
              shadowBlur: 6
            },
            label: {
              show: false
            }
          }
        ],
      };

      chart.setOption(option);
      window.addEventListener('resize', () => chart.resize());
    }

    // Observer para disparar animação quando o gráfico aparecer na tela
    const graficoEl = document.getElementById('graficoComMeta');

    const observer = new IntersectionObserver((entries, observer) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          // Primeiro carrega barras zeradas
          carregarGraficoComMeta(false);
          // Depois de 1 segundo, carrega as barras reais com animação
          setTimeout(() => carregarGraficoComMeta(true));
          observer.unobserve(entry.target);
        }
      });
    }, { threshold: 0.3 });

    observer.observe(graficoEl);



  </script>

</body>

</html>